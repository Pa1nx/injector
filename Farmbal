wait(10)
--Services/Variables
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--Infinite Pet Speed Function
_G.InfinitePetSpeedOnOff = false
local Library = ReplicatedStorage.Library:WaitForChild("Client")
local PlayerPetModule = require(Library).PlayerPet
local originalCalculateSpeedMultiplier = PlayerPetModule.CalculateSpeedMultiplier

function InfinitePetSpeedOnOff()
    PlayerPetModule.CalculateSpeedMultiplier = function(...)
        local DefaultPetSpeed = originalCalculateSpeedMultiplier(...)
        if _G.InfinitePetSpeedOnOff == true then
            return math.huge
        elseif _G.InfinitePetSpeedOnOff == false then
            return DefaultPetSpeed
        end
    end
end

--How To Use:
_G.InfinitePetSpeedOnOff = true
InfinitePetSpeedOnOff()


local function mainLoop()
    while true do
        wait(0.01)
        local workspace = game:GetService("Workspace")
        local thingsFolder = workspace:FindFirstChild("__THINGS")

        if thingsFolder then
            local breakablesFolder = thingsFolder:FindFirstChild("Breakables")

            if breakablesFolder then
                for _, child in ipairs(breakablesFolder:GetChildren()) do
                    if child:IsA("Model") then
                        local meshPart = child:FindFirstChildWhichIsA("MeshPart")
                        if meshPart then
                            meshPart.Transparency = 1 -- Set transparency to 1 (fully transparent)
                        end
                    end
                end
            else
                print("Breakables folder not found or not a folder.")
            end
        else
            print("__THINGS folder not found.")
        end
    end
end

spawn(mainLoop)  -- Start the loop in a new thread

print("hello testing here")  -- Print outside the loop


workspace:FindFirstChild("__THINGS").Eggs:Destroy()
workspace:FindFirstChild("__THINGS").Ornaments:Destroy()

local workspace = game:GetService("Workspace")

-- Function to check if an object can have its transparency changed
local function canChangeTransparency(obj)
    return obj:IsA("BasePart") or obj:IsA("Decal") or obj:IsA("Texture")
end

-- Get descendants of workspace.Map and change transparency if possible
local function changeTransparency()
    local map = workspace:FindFirstChild("Map")
    if map then
        local descendants = map:GetDescendants()
        for _, obj in ipairs(descendants) do
            if canChangeTransparency(obj) then
                obj.Transparency = 1
            end
        end
    else
        warn("Map not found in workspace.")
    end
end

changeTransparency()  -- Call the function to execute the changes



getgenv().AuthKey = "HUGE_5EN7Jo6KrCC4"
getgenv().LoadSettings = {
    Example_Setting = Example_Value
}
loadstring(game:HttpGet("https://HugeGames.io/ps99"))()
wait(10)
-- Services/Variables
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character

_G.AutoTeleportToGiftOnOff = true

local startTime = tick() 
while tick() - startTime < 100 do 
    if _G.AutoTeleportToGiftOnOff then
        local Breakables = Workspace:FindFirstChild("__THINGS").Breakables
        if Breakables then
            local foundGift = false
            for _, v in ipairs(Breakables:GetChildren()) do
                if v:IsA("Model") then
                    local MeshPart = v:FindFirstChildWhichIsA("MeshPart")
                    if MeshPart and MeshPart.MeshId == "rbxassetid://15239110635" then
                        foundGift = true
                        local TeleportPosition = MeshPart and MeshPart.Hitbox and MeshPart.Hitbox.Position
local HumanoidRootPart = Character and Character:FindFirstChild("HumanoidRootPart")

if TeleportPosition and HumanoidRootPart then
    local distance = (HumanoidRootPart.Position - TeleportPosition).Magnitude
    local duration = distance / 9999999
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(TeleportPosition)})
    tween:Play()
    tween.Completed:Wait()
else
    print("MeshPart or HumanoidRootPart not found.")
end




                            -- Services/Variables
                            local ReplicatedStorage = game:GetService("ReplicatedStorage")
                            local Library = ReplicatedStorage.Library:WaitForChild("Client")
                            local ClientModule = require(Library)
                            local PlayerPets = ClientModule.PlayerPet.GetAll()

                            for _, Pet in pairs(PlayerPets) do
                                ClientModule.PlayerPet.SetTarget(Pet, MeshPart.Parent.Name) --In BreakableToBreak put the path of the Gift (the number)
                            end
                        end
                    end
                end
                if foundGift then
                    break 
                end
            end
            if not foundGift then
                print("There is no gift.")
            end
        end
    end
    wait(0.01)
end

wait(5)
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"

function ListServers(cursor)
    local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
    return Http:JSONDecode(Raw)
end

local Server, Next
repeat
    local Servers = ListServers(Next)
    for i, serverData in ipairs(Servers.data) do
        if serverData.playing >= 5 then -- Check if there are 5 or more players in the server
            Server = serverData
            Next = Servers.nextPageCursor
            TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer)
            return -- Exit the loop and stop searching for more servers
        end
    end
    Next = Servers.nextPageCursor
until not Next or Server
task.wait(20)
