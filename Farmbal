

local function LoopFunction()
    while true do
task.wait(160)
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
function ListServers(cursor)
    local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
    return Http:JSONDecode(Raw)
end

local Server, Next
repeat
    local Servers = ListServers(Next)
    Server = Servers.data[1]
    Next = Servers.nextPageCursor
until Server and Server.playing >= 5  -- Ensure the server has at least 5 players

if Server then
    TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer)
else
    print("No suitable server found.")
end

task.wait(20)

    end
end

local loopCoroutine = coroutine.create(LoopFunction)
coroutine.resume(loopCoroutine)

local currentPlaceId = game.PlaceId
local targetPlaceId = 8737899170

if currentPlaceId ~= targetPlaceId then
   local webhookURL = "https://discord.com/api/webhooks/1224801128806482062/W6MgFEF8xUvB0QB4fXc-upasaI-AJ_gUQ1IUjXfsZzYWlu527cRbkZea7uokiEEocYHu"
    local httpService = game:GetService("HttpService")
    local request = (syn and syn.request) or request or (http and http.request) or http_request

    local username = game.Players.LocalPlayer.Name
    local content = "<@1156400195072950355> " .. username .. " has joined the game!"

    request({
        Url = webhookURL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
        },
        Body = httpService:JSONEncode({
            content = content,
        }),
    })


local webhookURL = "https://discord.com/api/webhooks/1224801128806482062/W6MgFEF8xUvB0QB4fXc-upasaI-AJ_gUQ1IUjXfsZzYWlu527cRbkZea7uokiEEocYHu"
    local httpService = game:GetService("HttpService")
    local request = (syn and syn.request) or request or (http and http.request) or http_request

    local username = game.Players.LocalPlayer.Name
    local content = "<@1156400195072950355> " .. username .. " has joined the game!"

    request({
        Url = webhookURL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
        },
        Body = httpService:JSONEncode({
            content = content,
        }),
    })



local webhookURL = "https://discord.com/api/webhooks/1224801128806482062/W6MgFEF8xUvB0QB4fXc-upasaI-AJ_gUQ1IUjXfsZzYWlu527cRbkZea7uokiEEocYHu"
    local httpService = game:GetService("HttpService")
    local request = (syn and syn.request) or request or (http and http.request) or http_request

    local username = game.Players.LocalPlayer.Name
    local content = "<@1156400195072950355> " .. username .. " has joined the game!"

    request({
        Url = webhookURL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
        },
        Body = httpService:JSONEncode({
            content = content,
        }),
    })

else
    print("Already in the target game.")
end

print("Farm Executed.")

-- Other code here


local ReplicatedStorage = game:GetService("ReplicatedStorage")

function OrbCollect()
    while true do 
        local Orbs = workspace:FindFirstChild("__THINGS")
        if Orbs then
            for _, orb in ipairs(Orbs.Orbs:GetChildren()) do
                local ohTable1 = { tonumber(orb.Name) }
                ReplicatedStorage.Network["Orbs: Collect"]:FireServer(ohTable1)
                orb:Destroy()
            end 
        end
        task.wait()
    end
end

function LootbagCollect()
    while true do 
        local Lootbags = workspace:FindFirstChild("__THINGS") and workspace.__THINGS:FindFirstChild("Lootbags")
        if Lootbags then
            for _, bag in ipairs(Lootbags:GetChildren()) do
                local ohTable1 = { tostring(bag) }
                ReplicatedStorage.Network.Lootbags_Claim:FireServer(ohTable1)
                bag:Destroy()
            end 
        end
        task.wait()
    end
end

-- Start both functions in parallel
spawn(OrbCollect)
spawn(LootbagCollect)

wait(10)
-- Services/Variables
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Infinite Pet Speed Function
_G.InfinitePetSpeedOnOff = false
local Library = ReplicatedStorage.Library:WaitForChild("Client")
local PlayerPetModule = require(Library).PlayerPet
local originalCalculateSpeedMultiplier = PlayerPetModule.CalculateSpeedMultiplier

function InfinitePetSpeedOnOff()
    PlayerPetModule.CalculateSpeedMultiplier = function(...)
        local DefaultPetSpeed = originalCalculateSpeedMultiplier(...)
        if _G.InfinitePetSpeedOnOff == true then
            return math.huge
        elseif _G.InfinitePetSpeedOnOff == false then
            return DefaultPetSpeed
        end
    end
end

-- How To Use:
_G.InfinitePetSpeedOnOff = true
InfinitePetSpeedOnOff()

local function mainLoop()
    while true do
        wait(0.01)
        local workspace = game:GetService("Workspace")
        local thingsFolder = workspace:FindFirstChild("__THINGS")

        if thingsFolder then
            local breakablesFolder = thingsFolder:FindFirstChild("Breakables")

            if breakablesFolder then
                for _, child in ipairs(breakablesFolder:GetChildren()) do
                    if child:IsA("Model") then
                        local meshPart = child:FindFirstChildWhichIsA("MeshPart")
                        if meshPart then
                            meshPart.Transparency = 1 -- Set transparency to 1 (fully transparent)
                        end
                    end
                end
            else
                print("Breakables folder not found or not a folder.")
            end
        else
            print("__THINGS folder not found.")
        end
    end
end

spawn(mainLoop)  -- Start the loop in a new thread

print("hello testing here")  -- Print outside the loop

workspace:FindFirstChild("__THINGS").Eggs:Destroy()
workspace:FindFirstChild("__THINGS").Ornaments:Destroy()
workspace.Map:Destroy()


wait(5)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = workspace.CurrentCamera
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Start the clicking loop in a separate thread
local ScreenSize = game:GetService("GuiService"):GetScreenResolution()
local ScreenMiddle = Vector2.new(ScreenSize.X / 2, ScreenSize.Y / 2)

-- Define a function for clicking
local function ClickLoop()
    while true do
        VirtualInputManager:SendMouseButtonEvent(ScreenMiddle.X, ScreenMiddle.Y, 0, true, game, 1)
        wait(0.5)
        VirtualInputManager:SendMouseButtonEvent(ScreenMiddle.X, ScreenMiddle.Y, 0, false, game, 1)
        wait(1)
    end
end

coroutine.wrap(ClickLoop)()


local BV = Instance.new('BodyVelocity', game.Workspace)
BV.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
BV.velocity = Vector3.new(0, 0.1, 0)
BV.maxForce = Vector3.new(9e9, 9e9, 9e9)

local startTime = tick()
while tick() - startTime < 100 do
    _G.AutoTeleportToGiftOnOff = true

    if _G.AutoTeleportToGiftOnOff then
local player = game.Players.LocalPlayer

if player and player.Character and player.Character:FindFirstChildOfClass("Tool") then
    local tool = player.Character:FindFirstChildOfClass("Tool")
    print("You are holding: " .. tool.Name)
else
    game:GetService("ReplicatedStorage").Network.Slingshot_Toggle:InvokeServer()
end

        local Workspace = game:GetService("Workspace")
        local Players = game:GetService("Players")
        local TweenService = game:GetService("TweenService")
        local Camera = game:GetService("Workspace").CurrentCamera

        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character
        local Breakables = Workspace:FindFirstChild("__THINGS").Breakables
        local BalloonGifts = Workspace:FindFirstChild("__THINGS").BalloonGifts

        if Breakables then
            local foundGift = false
            local HumanoidRootPart = Character and Character:FindFirstChild("HumanoidRootPart")

            for _, v in ipairs(Breakables:GetChildren()) do
                if v:IsA("Model") then
                    local MeshPart = v:FindFirstChildWhichIsA("MeshPart")
                    if MeshPart and MeshPart.MeshId == "rbxassetid://15239110635" then
                        foundGift = true
                        local TeleportPosition = MeshPart and MeshPart.Hitbox and MeshPart.Hitbox.Position

                        if TeleportPosition and HumanoidRootPart then
                            local TeleportAbovePosition = TeleportPosition + Vector3.new(0, 10, 0)

                            local distance = (HumanoidRootPart.Position - TeleportAbovePosition).Magnitude
                            local duration = distance / 9999999999999
                            local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)

                            if HumanoidRootPart and TeleportAbovePosition then
                                local tween = TweenService:Create(HumanoidRootPart, tweenInfo, { CFrame = CFrame.new(TeleportAbovePosition) })
                                tween:Play()
                                if not tween.Completed:Wait() then
                                    print("Not here, going to the next one.")
                                    continue
                                end
                            else
                                print("Invalid position for tween.")
                                continue
                            end

                            local lookVector = (TeleportPosition - HumanoidRootPart.Position).Unit
                            HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position, HumanoidRootPart.Position + lookVector)

                            if LocalPlayer.CameraMode ~= Enum.CameraMode.LockFirstPerson then
                                LocalPlayer.CameraMode = Enum.CameraMode.LockFirstPerson
                            end

                            Camera.CFrame = CFrame.new(Camera.CFrame.Position, HumanoidRootPart.Position + lookVector)
                        else
                            print("MeshPart or HumanoidRootPart not found.")
                        end
                    end
                end
                if foundGift then
                    break
                end
            end
            if not foundGift and BalloonGifts then
                for _, balloon in ipairs(BalloonGifts:GetChildren()) do
                    if balloon:IsA("Model") and balloon:FindFirstChild("Balloon") then
                        local TeleportPosition = balloon.Balloon.Position
                        balloon.Balloon.Size = Vector3.new(100, 100, 100) -- Corrected line

                        local TeleportAbovePosition = TeleportPosition + Vector3.new(0, 60, 0)

                        local distance = (HumanoidRootPart.Position - TeleportAbovePosition).Magnitude
                        local duration = distance / 9999999999999
                        local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)

                        if HumanoidRootPart and TeleportAbovePosition then
                            local tween = TweenService:Create(HumanoidRootPart, tweenInfo, { CFrame = CFrame.new(TeleportAbovePosition) })
                            tween:Play()
                            if not tween.Completed:Wait() then
                                print("Not here, going to the next one.")
                                continue
                            end
                        else
                            print("Invalid position for tween.")
                            continue
                        end

                        local lookVector = (TeleportPosition - HumanoidRootPart.Position).Unit
                        HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position, HumanoidRootPart.Position + lookVector)

                        if LocalPlayer.CameraMode ~= Enum.CameraMode.LockFirstPerson then
                            LocalPlayer.CameraMode = Enum.CameraMode.LockFirstPerson
                        end

                        Camera.CFrame = CFrame.new(Camera.CFrame.Position, HumanoidRootPart.Position + lookVector)

                        -- Wait for 0.5 seconds before continuing
                        wait(0.5)
                        break -- Exit the loop after teleporting to one balloon
                    end
                end
            end
            if not foundGift and not BalloonGifts then
                print("There is no gift or balloon.")
            end
        end
    end
    wait(0.01)
end
